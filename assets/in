#!/usr/bin/env bash

[ "$TRACE" == "true" ] && set -x
set -e
set -o pipefail

source /opt/resource/git/common.sh

DEST_DIR="$1"

GIT_DEST_DIR="$(mktemp -d -t git-resource-destination.XXXXXX)"

/opt/resource/git/in "$GIT_DEST_DIR"

PAYLOAD=$(echo /tmp/git-resource-request.*)

load_pubkey $PAYLOAD
configure_git_ssl_verification $PAYLOAD
configure_credentials $PAYLOAD

REGISTRY_URL=$(jq -r '.source["registry-url"] // ""' < $PAYLOAD)
REGISTRY_USER=$(jq -r '.source["registry-user"] // ""' < $PAYLOAD)
REGISTRY_PASS=$(jq -r '.source["registry-pass"] // ""' < $PAYLOAD)
REGISTRY_MAIL=$(jq -r '.source["registry-email"] // ""' < $PAYLOAD)
REGISTRY_SCOPE=$(jq -r '.source["registry-scope"] // ""' < $PAYLOAD)

REGISTRY=$(jq -r '.source.registry // ""' < $PAYLOAD)
TOKEN=$(jq -r '.source.token // ""' < $PAYLOAD)

PROJECT_PATH=$(jq -r '.source["project-path"] // ""' < $PAYLOAD)
BOWER_SUPPORT=$(jq -r '.source["bower-support"] // false' < $PAYLOAD)
YARN_SUPPORT=$(jq -r '.source["yarn-support"] // false' < $PAYLOAD)

cd "$GIT_DEST_DIR/$PROJECT_PATH"

if [  "$http_proxy" != "" ]; then

    echo "Set npm httproxy: "$http_proxy"" >&2

    npm config set proxy $http_proxy
    npm config set https-proxy $https_proxy
fi

if [ "$REGISTRY_USER" != "" ] && [ "$REGISTRY_PASS" != "" ] && [ "$REGISTRY_MAIL" != "" ]; then

    if [ -z "$REGISTRY_URL" ]; then
        REGISTRY_URL_OPTION=""
    else
        REGISTRY_URL_OPTION="-r $REGISTRY_URL"
    fi

    if [ -z "$REGISTRY_SCOPE" ]; then
        REGISTRY_SCOPE_OPTION=""
    else
        REGISTRY_SCOPE_OPTION="-s $REGISTRY_SCOPE"
    fi

    npm-cli-login -r $REGISTRY_URL_OPTION -u $REGISTRY_USER -p $REGISTRY_PASS -e $REGISTRY_MAIL $REGISTRY_URL_OPTION $REGISTRY_SCOPE_OPTION --quotes

else

    if [ "$TOKEN" != "" ]; then

        echo "always-auth=true" >> ~/.npmrc
        echo "_auth="$TOKEN"" >> ~/.npmrc
    fi

    if [ "$REGISTRY" != "" ]; then

        echo "Set Private Registry: "$REGISTRY"" >&2
        npm config set registry $REGISTRY
    fi
fi

if [ "$YARN_SUPPORT" != "false" ]; then
    NODE_ENV=development && yarn install >&2
else
    NODE_ENV=development && npm install --quiet >&2
fi

if [ "$BOWER_SUPPORT" != "false" ]; then
    node_modules/.bin/bower install --allow-root >&2
    mv bower_components "$DEST_DIR/"
fi

mv node_modules "$DEST_DIR/"
